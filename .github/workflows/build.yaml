name: VTB API BUILD
run-name: ${{ github.actor }} launched pipeline on ${{ github.ref}}
on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  upload-release:
    if: github.event.pull_request.merged == true

    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: denoland/setup-deno@v2
      - name: Compile project
        run: |
          deno compile --allow-net --target x86_64-pc-windows-msvc -o vtb_win.exe index.ts
          deno compile --allow-net --target x86_64-unknown-linux-gnu -o vtb_linux index.ts
          deno compile --allow-net --target aarch64-apple-darwin -o vtb_mac index.ts
          zip -r vtb_win.zip vtb_win.exe
          zip -r vtb_linux.zip vtb_linux
          zip -r vtb_mac.zip vtb_mac

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.actor}}_${{ github.sha }}
          release_name: Release ${{github.sha}}
          body: New vtb-api release
          draft: false
          prerelease: false

      - name: Upload win release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vtb_win.zip
          asset_name: vtb_win.zip
          asset_content_type: application/zip
      - name: Upload linux release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vtb_linux.zip
          asset_name: vtb_linux.zip
          asset_content_type: application/zip
      - name: Upload mac release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vtb_mac.zip
          asset_name: vtb_mac.zip
          asset_content_type: application/zip

  upload-docker-image:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: denoland/setup-deno@v2
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
